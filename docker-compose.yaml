services:
  database:
    image: postgres:17-bookworm
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_LISTEN_ADDRESSES: "*"
    volumes:
      - local-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: .
    environment:
      ENV: ${ENV}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SSLMODE: disable
      STRIPE_KEY: ${STRIPE_KEY}
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: ../flockcounter-frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
        NEXT_PUBLIC_DEMO_DOMAIN: ${NEXT_PUBLIC_DEMO_DOMAIN}
    environment:
      NEXTAUTH_URL: ${PUBLIC_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      BACKEND_URL: http://backend:8080/api
    depends_on:
      - backend

  nginx:
    image: nginx:bookworm
    ports:
      - "80:80"
      # Uncomment for HTTPS
      # - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Uncomment for HTTPS
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend

volumes:
  local-postgres-data:
    external: true
